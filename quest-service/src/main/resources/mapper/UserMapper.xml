<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jigubangbang.quest_service.repository.UserQuestMapper">
    <insert id="insertQuestUser" parameterType="com.jigubangbang.quest_service.model.QuestUserDto">
        INSERT INTO quest_user (user_id, quest_id, status, started_at)
        VALUES (#{user_id}, #{quest_id}, #{status}, #{started_at})
    </insert>

    <select id="countUserQuest" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM quest_user
        WHERE user_id = #{user_id} AND quest_id = #{quest_id}
    </select>
    
    <select id="getUserJourney" parameterType="String" resultType="com.jigubangbang.quest_service.model.UserJourneyDto">
        SELECT 
            u.user_id as user_id,
            u.nickname as nickname,
            u.profile_image as profile_image,
            u.level,
            COALESCE(quest_stats.completed_count, 0) as completed_quest_count
        FROM user u
        LEFT JOIN (
            SELECT 
                user_id,
                COUNT(*) as completed_count
            FROM quest_user 
            WHERE status = 'COMPLETED'
            GROUP BY user_id
        ) quest_stats ON u.user_id = quest_stats.user_id
        WHERE u.user_id = #{user_id}
    </select>

    <select id="getUserQuestList" parameterType="map" resultType="com.jigubangbang.quest_service.model.QuestUserDto">
        SELECT
            qu.id, qu.user_id, qu.quest_id, qu.status,
            qu.started_at, qu.completed_at, qu.given_up_at,
            q.title, q.difficulty, q.xp
        FROM quest_user qu
        JOIN quest q ON qu.quest_id = q.id
        WHERE qu.user_id = #{user_id}
        <if test="filter != null">
            AND status = #{filter}
        </if>
        
        <choose>
            <when test="order == 'xp'">
                ORDER BY xp DESC
            </when>
            <when test="order == 'started_at'">
                ORDER BY started_at DESC
            </when>
            <when test="order == 'completed_at'">
                ORDER BY completed_at DESC
            </when>
            <otherwise>
                ORDER BY id DESC
            </otherwise>
        </choose>
    </select>

    <select id="getQuestCerti" parameterType="int" resultType="com.jigubangbang.quest_service.model.QuestCerti">
        SELECT
            qu.id,
            qu.user_id as user_id,
            qu.quest_id as quest_id,
            qu.status,
            qu.description,
            qu.started_at as started_at,
            qu.completed_at as completed_at,
            qu.given_up_at as given_up_at,
            
            q.title,
            q.difficulty,
            q.description as quest_description,
            q.xp
        FROM quest_user qu
        JOIN quest q ON qu.quest_id = q.id
        WHERE qu.id = #{quest_user_id}
    </select>

    <select id="getQuestCertiImages" parameterType="int" resultType="String">
        SELECT image
        FROM quest_image
        WHERE quest_user_id = #{quest_user_id}
    </select>

    <update id="updateQuestUserPending" parameterType="int">
        UPDATE quest_user
        SET status = 'PENDING', completed_at = CURRENT_TIMESTAMP
        WHERE id = #{quest_user_id}
    </update>

    <select id="getQuestType" parameterType="int" resultType="String">
        SELECT q.type 
        FROM quest q
        JOIN quest_user qu ON qu.quest_id = q.id
    </select>

    <insert id="insertQuestImages" parameterType="java.util.List">
        INSERT INTO quest_image (quest_user_id, image)
        VALUES
        <foreach collection="images" item="image" separator=",">
            (#{image.quest_user_id}, #{image.image})
        </foreach>
    </insert>

    <update id="updateQuestUserAbandon" parameterType="Integer">
        UPDATE quest_user 
        SET status = 'GIVEN_UP', given_up_at = CURRENT_TIMESTAMP
        WHERE id = #{quest_user_id}
    </update>
</mapper>